name: Validate PR

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: rust-validation-${{ github.head_ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  RUST_LOG: "info"
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG: true

jobs:
  formatting:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check Formatting
        run: cargo fmt -- --check

  linting:
    timeout-minutes: 120
    name: Cargo Clippy
    runs-on: macos-latest
    strategy:
      matrix:
        package: [
          eigensdk-rs
        ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Foundry
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          source /Users/runner/.bashrc
          foundryup

      - name: Add Foundry to PATH
        run: echo "${HOME}/.foundry/bin" >> $GITHUB_PATH

      - name: Verify Forge installation
        run: forge --version

      - name: Current Working Directory
        run: pwd

      - name: List Files in Current Working Directory
        run: ls -al

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Run Clippy
        run: cargo clippy --package ${{ matrix.package }} --tests -- -D warnings

  testing:
    timeout-minutes: 90
    name: Cargo Test
    runs-on: macos-14
    strategy:
      matrix:
        package: [
          test-utils,
          tangle-avs,
          incredible-squaring-avs,
          eigen-utils,
        ]
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Set Relevant M1 env vars
        run: |
          export LIBRARY_PATH=$LIBRARY_PATH:/opt/homebrew/lib
          export INCLUDE_PATH=$INCLUDE_PATH:/opt/homebrew/include

      - name: install cargo-nextest
        run: cargo install cargo-nextest --locked

      - name: tests
        run: cargo nextest run --release --test-threads 1 --package ${{ matrix.package }}